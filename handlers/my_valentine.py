import re

from aiogram.dispatcher.filters import Text

from aiogram.dispatcher import FSMContext

from aiogram import types, Dispatcher
from aiogram.types import KeyboardButton

from bot_creation import bot
from services.connect_server import valentines_service
from states.tier_state import ViewValentineState


async def get_my_valentines(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.update_data(recipient=callback.from_user.username)
    username = callback.from_user.username
    response = valentines_service.get_user(username)
    user_data = {'recipient': response[0]['id']}
    users_response = valentines_service.get_my_valentines(user_data)
    val_list = list(users_response)
    count = 0
    for i in users_response:
        if i['status'] == True:
            val_list.pop(count)
        else:
            count += 1
    await state.update_data(my_valentines=val_list)
    if len(val_list) == 0:
        await state.finish()
        await callback.message.answer("H–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è –Ω–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –≤–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫ üéü\n"
                                      "–ó–∞–π–¥–∏ –ø–æ–ø–æ–∑–∂–µ")
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await callback.message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)
    elif len(val_list) == 1:
        await state.set_state(ViewValentineState.GetValentines)
        await state.set_state(ViewValentineState.GetAnAnswer)
        reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        reply_kb.add(KeyboardButton('–î–∞'))
        reply_kb.add(KeyboardButton('–ù–µ—Ç'))
        await callback.message.answer(f'–£ —Ç–µ–±—è –µ—Å—Ç—å {len(val_list)} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞, –∂–µ–ª–∞–µ—à—å –µ—ë –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å? üíï', reply_markup=reply_kb)

    elif len(val_list) >= 2 and len(val_list) <=4:
        await state.set_state(ViewValentineState.GetValentines)
        await state.set_state(ViewValentineState.GetAnAnswer)
        reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        reply_kb.add(KeyboardButton('–î–∞'))
        reply_kb.add(KeyboardButton('–ù–µ—Ç'))
        await callback.message.answer(f'–£ —Ç–µ–±—è –µ—Å—Ç—å {len(val_list)} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞, –∂–µ–ª–∞–µ—à—å –µ—ë –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å? üíï', reply_markup=reply_kb)

    else:
        await state.set_state(ViewValentineState.GetValentines)
        await state.set_state(ViewValentineState.GetAnAnswer)
        reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        reply_kb.add(KeyboardButton('–î–∞'))
        reply_kb.add(KeyboardButton('–ù–µ—Ç'))
        await callback.message.answer(f'–£ —Ç–µ–±—è –µ—Å—Ç—å {len(val_list)} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏, –∂–µ–ª–∞–µ—à—å –∏—Ö –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å? üíï', reply_markup=reply_kb)


async def get_an_answer(message: types.Message, state: FSMContext):
    await state.set_state(ViewValentineState.ViewValentine)
    if message.text == '–ù–µ—Ç':
        await state.finish()
        await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)
    elif message.text == '–î–∞':
        get_data = await state.get_data()
        my_valentines = list(get_data['my_valentines'])
        if my_valentines[0]['is_publish'] == True:
            sender = f"@{my_valentines[0]['sender']}"
            valentine_id = my_valentines[0]['id']
        elif my_valentines[0]['is_publish'] == False:
            sender = '–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —Ä–µ—à–∏–ª –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Å–µ–∫—Ä–µ—Ç–∏–∫–µ üíí'
            valentine_id = my_valentines[0]['id']

        reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)

        len_list = len(my_valentines)
        if len_list > 2:
            reply_kb.add(KeyboardButton('–î–∞–ª–µ–µ'))
            reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n"
                                 f"–£ —Ç–µ–±—è –µ—â–µ {len(my_valentines) - 1} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏", reply_markup=reply_kb)
            await state.set_state(ViewValentineState.ViewValentine)


        elif len_list == 2:
            reply_kb.add(KeyboardButton('–î–∞–ª–µ–µ'))
            reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n"
                                 f"–£ —Ç–µ–±—è –µ—â–µ {len(my_valentines) - 1} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞", reply_markup=reply_kb)
            await state.set_state(ViewValentineState.ViewValentine)


        else:
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n")
            await state.finish()
            await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
            inline_kb = types.InlineKeyboardMarkup(row_width=1)
            inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
            inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                reply_markup=inline_kb)

        my_valentines.pop(0)
        user_response = valentines_service.patch_valentines(valentine_id)
        await state.update_data(my_valentines=my_valentines)

    else:
        await message.answer('–ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞')



async def view_valentines(message: types.Message, state: FSMContext):
    if message.text == '–î–∞–ª–µ–µ':
        get_data = await state.get_data()
        my_valentines = list(get_data['my_valentines'])
        if my_valentines[0]['is_publish'] == True:
            sender = f"@{my_valentines[0]['sender']}"
            valentine_id = my_valentines[0]['id']
        elif my_valentines[0]['is_publish'] == False:
            sender = '–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —Ä–µ—à–∏–ª –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Å–µ–∫—Ä–µ—Ç–∏–∫–µ üíí'
            valentine_id = my_valentines[0]['id']

        reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)


        len_list = len(my_valentines)
        if len_list > 2:
            reply_kb.add(KeyboardButton('–î–∞–ª–µ–µ'))
            reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n"
                                 f"–£ —Ç–µ–±—è –µ—â–µ {len(my_valentines) - 1} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏",
                                 reply_markup=reply_kb)
            await state.set_state(ViewValentineState.ViewValentine)


        elif len_list == 2:
            reply_kb.add(KeyboardButton('–î–∞–ª–µ–µ'))
            reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n"
                                 f"–£ —Ç–µ–±—è –µ—â–µ {len(my_valentines) - 1} –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞",
                                 reply_markup=reply_kb)
            await state.set_state(ViewValentineState.ViewValentine)

        else:
            if my_valentines[0]['file_id'] != "":
                await bot.send_photo(chat_id=message.from_user.id, photo=my_valentines[0]['file_id'])
            await message.answer(f"{my_valentines[0]['text']}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n\n", reply_markup=types.ReplyKeyboardRemove())
            await state.finish()
            inline_kb = types.InlineKeyboardMarkup(row_width=1)
            inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
            inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                reply_markup=inline_kb)
        my_valentines.pop(0)
        user_response = valentines_service.patch_valentines(valentine_id)
        await state.update_data(my_valentines=my_valentines)

    elif message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await state.finish()
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)

    else:
        await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç—É')



def setup(dp: Dispatcher):
    dp.register_callback_query_handler(get_my_valentines, Text(equals="my_valentine"))

    dp.register_message_handler(get_an_answer, state=ViewValentineState.GetAnAnswer)
    dp.register_message_handler(view_valentines, state=ViewValentineState.ViewValentine)


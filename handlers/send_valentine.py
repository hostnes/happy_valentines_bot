import hashlib
import re
from pprint import pprint

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text

from aiogram.dispatcher import FSMContext

from aiogram import types, Dispatcher
from aiogram.types import KeyboardButton, Message, ContentType
from pyrogram import Client
from pyrogram.raw.functions.contacts import ResolveUsername

from services.connect_server import valentines_service
from states.tier_state import SendValentineState

from bot_creation import bot

from aiogram import Dispatcher, executor, types


dp = Dispatcher(bot, storage=MemoryStorage())




async def send_valentine(callback: types.CallbackQuery, state: FSMContext):
    try:
        username = callback.from_user.username
        await callback.message.delete()
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        inline_kb.add(types.InlineKeyboardButton("–î–∞", callback_data="False"))
        inline_kb.add(types.InlineKeyboardButton("–ù–µ—Ç", callback_data="True"))
        inline_kb.add(types.InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return"))
        await callback.message.answer('–ñ–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ?', reply_markup=inline_kb)
    except:
        await callback.message.answer('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π '
                                      '—Å–≤–æ–π Usernsme, –∏–∑–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')


async def get_publish(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.set_state(SendValentineState.GetUsername)
    await state.update_data(sender=callback.from_user.username)
    await state.update_data(is_publish=callback.data)
    reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω—ç–π–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è: \n\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: username –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–µ–∑ @\n'
                                  '–ü—Ä–∏–º–µ—Ä: hostnes, yungchuggi', reply_markup=reply_kb)

async def get_username(message: types.Message, state: FSMContext):
        username = message.text
        if username == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            await state.finish()
            inline_kb = types.InlineKeyboardMarkup(row_width=1)
            await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
            inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
            inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                reply_markup=inline_kb)
        else:
            if message.text == message.from_user.username:
                await message.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É —Å–∞–º–æ–º—É —Å–µ–±–µ.\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π username')
            else:
                result = re.match(r'[A-Za-z\d_]{5,32}$', username)
                if bool(result) == True:
                    await state.update_data(recipient=message.text)
                    await state.set_state(SendValentineState.GetPhotoAnswer)
                    reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
                    reply_kb.add(KeyboardButton('–î–∞'))
                    reply_kb.add(KeyboardButton('–ù–µ—Ç'))
                    reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    await message.answer('–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ?', reply_markup=reply_kb)
                else:
                    await message.answer("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–ø–∏—Å–∞–Ω Username, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑: ")


async def get_photo_answer(message: Message, state: FSMContext):
    text = message.text
    if text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await state.finish()
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)
    elif text == '–î–∞':
        await state.set_state(SendValentineState.GetPhoto)
        await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ: ', reply_markup=types.ReplyKeyboardRemove())
    elif text == '–ù–µ—Ç':
        await state.set_state(SendValentineState.GetText)
        await state.update_data(file_id='')
        await message.answer('–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∫ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–µ: ')
    else:
        await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç—É')


async def get_photo(message: types.Message, state: FSMContext):
    file_id = str(message.photo[-1].file_id)
    await state.update_data(file_id=file_id)
    await state.set_state(SendValentineState.GetText)
    reply_kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    reply_kb.add(KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    await message.answer('–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∫ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–µ: ', reply_markup=reply_kb)


async def get_text(message: types.Message, state: FSMContext):
    text = message.text
    if text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await state.finish()
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)
    else:
        await state.update_data(text=text)
        get_data = await state.get_data()
        await message.answer('–í–∞—à–∞ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üíï')
        await state.set_state()
        username = get_data['recipient']
        try:
            response = valentines_service.get_user(username)
            recipient_telegram_id = response[0]['telegram_id']
            recipient_id = response[0]['id']
            await bot.send_message(chat_id=recipient_telegram_id, text='–í–∞–º –ø—Ä–∏—à–ª–∞ –Ω–æ–≤–∞—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞ üéü')
        except:
            pass
        valentine_data = {
            'sender': get_data['sender'],
            'recipient': recipient_id,
            'is_publish': get_data['is_publish'],
            'text': get_data['text'],
            'file_id': get_data['file_id'],
        }
        response = valentines_service.post_valentines(valentine_data)
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        await message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)


async def return_menu(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.finish()
    inline_kb = types.InlineKeyboardMarkup(row_width=1)
    await callback.message.answer('üíû', reply_markup=types.ReplyKeyboardRemove())
    inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
    inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
    await callback.message.answer(
        "–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
        "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å üéü\n\n"
        "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
        reply_markup=inline_kb)


def setup(dp: Dispatcher):
    """
    –û–°–ù–û–í–ù–´–ï
    """
    dp.register_callback_query_handler(send_valentine, Text(equals="send_valentine"))
    dp.register_callback_query_handler(get_publish, Text(equals="True"))
    dp.register_callback_query_handler(get_publish, Text(equals="False"))

    dp.register_callback_query_handler(return_menu, Text(equals="return"))

    dp.register_message_handler(get_photo_answer, state=SendValentineState.GetPhotoAnswer)

    dp.register_message_handler(get_photo, state=SendValentineState.GetPhoto, content_types=ContentType.PHOTO)
    dp.register_message_handler(get_username, state=SendValentineState.GetUsername)
    dp.register_message_handler(get_text, state=SendValentineState.GetText)
    # dp.register_message_handler(get_user_data, state=SendValentineState.GetText)




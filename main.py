import logging

from aiogram import Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from pyrogram import Client

from services.connect_server import valentines_service
from bot_creation import bot

from handlers.my_valentine import setup as my_valentines_handler_setup
from handlers.send_valentine import setup as send_valentine_handler_setup


logging.basicConfig(level=logging.INFO)

dp = Dispatcher(bot, storage=MemoryStorage())

api_id = 12552206
api_hash = "a374231734920c72574a978e3d6d867d"

app = Client("my_account", api_id=api_id, api_hash=api_hash)



async def startup(_):
    valentines_service.check_connect()


@dp.message_handler(commands=["start"])
async def start(msg: types.Message):
    try:
        username = msg.from_user.username
        response = valentines_service.get_user(username)
        if len(response) == 0:
            username = msg.from_user.username
            user_data = {'telegram_id': msg.from_user.id,
                         'username': username}
            response = valentines_service.post_user(user_data)
        inline_kb = types.InlineKeyboardMarkup(row_width=1)
        inline_kb.add(types.InlineKeyboardButton("üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí", callback_data="send_valentine"))
        inline_kb.add(types.InlineKeyboardButton("üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü", callback_data="my_valentine"))
        await msg.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫. –ö–∞–∫ –ø–æ –º–Ω–µ —Å–∞–º–æ–µ –≤—Ä–µ–º—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É –∏–ª–∏ –¥—Ä—É–≥–∞ –º–∏–ª–æ–π –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–æ–πüíí\n\n"
                         "–ù–∞–∂–º–∏ 'üíí –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíí' –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –∫–æ–≥–æ –Ω–∏–±—É–¥—å üéü\n\n"
                         "–ù–∞–∂–º–∏ 'üéü –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üéü' –≤–¥—Ä—É–≥ —Ç–µ–±–µ —É–∂–µ –∫—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üíï",
                         reply_markup=inline_kb)
    except:
        await msg.answer('–î–ª—è –∏—Å–ø–æ–ª—å–∑—ã–≤–∞–Ω–∏—è –±–æ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—å—Å—è —Å–¥–µ–ª–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π —Å–≤–æ–π username, '
                         '–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –µ–≥–æ —É –≤–∞—Å –Ω–µ—Ç—É, –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ.'
                         '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Å–¥–µ–ª–∞–µ—Ç–µ –µ–≥–æ –ø—É–±–ª–∏—á–Ω—ã–º, –µ—â–µ —Ä–∞–∑ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start')

@dp.message_handler(commands=["help"])
async def help(msg: types.Message):
    await msg.answer("–ë–æ—Ç, –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–æ—Å–ª–∞—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –∏–ª–∏ –ø–æ–¥—Ä—É–≥–µ üíï\n"
                     "–°–æ–∑–¥–∞—Ç–µ–ª—å: @hostnes")


my_valentines_handler_setup(dp)
send_valentine_handler_setup(dp)

executor.start_polling(dp, skip_updates=True, on_startup=startup)
